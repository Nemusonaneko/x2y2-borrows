// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class AdminFeeReceiverUpdated extends ethereum.Event {
  get params(): AdminFeeReceiverUpdated__Params {
    return new AdminFeeReceiverUpdated__Params(this);
  }
}

export class AdminFeeReceiverUpdated__Params {
  _event: AdminFeeReceiverUpdated;

  constructor(event: AdminFeeReceiverUpdated) {
    this._event = event;
  }

  get param0(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class AdminFeeUpdated extends ethereum.Event {
  get params(): AdminFeeUpdated__Params {
    return new AdminFeeUpdated__Params(this);
  }
}

export class AdminFeeUpdated__Params {
  _event: AdminFeeUpdated;

  constructor(event: AdminFeeUpdated) {
    this._event = event;
  }

  get newAdminFee(): i32 {
    return this._event.parameters[0].value.toI32();
  }
}

export class ERC20Permit extends ethereum.Event {
  get params(): ERC20Permit__Params {
    return new ERC20Permit__Params(this);
  }
}

export class ERC20Permit__Params {
  _event: ERC20Permit;

  constructor(event: ERC20Permit) {
    this._event = event;
  }

  get erc20Contract(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get isPermitted(): boolean {
    return this._event.parameters[1].value.toBoolean();
  }
}

export class ERC721Permit extends ethereum.Event {
  get params(): ERC721Permit__Params {
    return new ERC721Permit__Params(this);
  }
}

export class ERC721Permit__Params {
  _event: ERC721Permit;

  constructor(event: ERC721Permit) {
    this._event = event;
  }

  get erc721Contract(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get isPermitted(): boolean {
    return this._event.parameters[1].value.toBoolean();
  }
}

export class LoanLiquidated extends ethereum.Event {
  get params(): LoanLiquidated__Params {
    return new LoanLiquidated__Params(this);
  }
}

export class LoanLiquidated__Params {
  _event: LoanLiquidated;

  constructor(event: LoanLiquidated) {
    this._event = event;
  }

  get loanId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get borrower(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get lender(): Address {
    return this._event.parameters[2].value.toAddress();
  }

  get borrowAmount(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }

  get nftTokenId(): BigInt {
    return this._event.parameters[4].value.toBigInt();
  }

  get loanMaturityDate(): BigInt {
    return this._event.parameters[5].value.toBigInt();
  }

  get loanLiquidationDate(): BigInt {
    return this._event.parameters[6].value.toBigInt();
  }

  get nftAsset(): Address {
    return this._event.parameters[7].value.toAddress();
  }
}

export class LoanRepaid extends ethereum.Event {
  get params(): LoanRepaid__Params {
    return new LoanRepaid__Params(this);
  }
}

export class LoanRepaid__Params {
  _event: LoanRepaid;

  constructor(event: LoanRepaid) {
    this._event = event;
  }

  get loanId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get borrower(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get lender(): Address {
    return this._event.parameters[2].value.toAddress();
  }

  get borrowAmount(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }

  get nftTokenId(): BigInt {
    return this._event.parameters[4].value.toBigInt();
  }

  get repayAmount(): BigInt {
    return this._event.parameters[5].value.toBigInt();
  }

  get adminFee(): BigInt {
    return this._event.parameters[6].value.toBigInt();
  }

  get nftAsset(): Address {
    return this._event.parameters[7].value.toAddress();
  }

  get borrowAsset(): Address {
    return this._event.parameters[8].value.toAddress();
  }
}

export class LoanStarted extends ethereum.Event {
  get params(): LoanStarted__Params {
    return new LoanStarted__Params(this);
  }
}

export class LoanStarted__Params {
  _event: LoanStarted;

  constructor(event: LoanStarted) {
    this._event = event;
  }

  get loanId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get borrower(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get lender(): Address {
    return this._event.parameters[2].value.toAddress();
  }

  get nonce(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }

  get loanDetail(): LoanStartedLoanDetailStruct {
    return changetype<LoanStartedLoanDetailStruct>(
      this._event.parameters[4].value.toTuple()
    );
  }
}

export class LoanStartedLoanDetailStruct extends ethereum.Tuple {
  get borrowAmount(): BigInt {
    return this[0].toBigInt();
  }

  get repayAmount(): BigInt {
    return this[1].toBigInt();
  }

  get nftTokenId(): BigInt {
    return this[2].toBigInt();
  }

  get borrowAsset(): Address {
    return this[3].toAddress();
  }

  get loanDuration(): BigInt {
    return this[4].toBigInt();
  }

  get adminShare(): i32 {
    return this[5].toI32();
  }

  get loanStart(): BigInt {
    return this[6].toBigInt();
  }

  get nftAsset(): Address {
    return this[7].toAddress();
  }

  get borrower(): Address {
    return this[8].toAddress();
  }

  get isCollection(): boolean {
    return this[9].toBoolean();
  }
}

export class MaxBorrowDurationUpdated extends ethereum.Event {
  get params(): MaxBorrowDurationUpdated__Params {
    return new MaxBorrowDurationUpdated__Params(this);
  }
}

export class MaxBorrowDurationUpdated__Params {
  _event: MaxBorrowDurationUpdated;

  constructor(event: MaxBorrowDurationUpdated) {
    this._event = event;
  }

  get newMaxBorrowDuration(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }
}

export class MinBorrowDurationUpdated extends ethereum.Event {
  get params(): MinBorrowDurationUpdated__Params {
    return new MinBorrowDurationUpdated__Params(this);
  }
}

export class MinBorrowDurationUpdated__Params {
  _event: MinBorrowDurationUpdated;

  constructor(event: MinBorrowDurationUpdated) {
    this._event = event;
  }

  get newMinBorrowDuration(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }
}

export class NonceCancelled extends ethereum.Event {
  get params(): NonceCancelled__Params {
    return new NonceCancelled__Params(this);
  }
}

export class NonceCancelled__Params {
  _event: NonceCancelled;

  constructor(event: NonceCancelled) {
    this._event = event;
  }

  get lender(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get nonce(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class Paused extends ethereum.Event {
  get params(): Paused__Params {
    return new Paused__Params(this);
  }
}

export class Paused__Params {
  _event: Paused;

  constructor(event: Paused) {
    this._event = event;
  }

  get account(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class RoleAdminChanged extends ethereum.Event {
  get params(): RoleAdminChanged__Params {
    return new RoleAdminChanged__Params(this);
  }
}

export class RoleAdminChanged__Params {
  _event: RoleAdminChanged;

  constructor(event: RoleAdminChanged) {
    this._event = event;
  }

  get role(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get previousAdminRole(): Bytes {
    return this._event.parameters[1].value.toBytes();
  }

  get newAdminRole(): Bytes {
    return this._event.parameters[2].value.toBytes();
  }
}

export class RoleGranted extends ethereum.Event {
  get params(): RoleGranted__Params {
    return new RoleGranted__Params(this);
  }
}

export class RoleGranted__Params {
  _event: RoleGranted;

  constructor(event: RoleGranted) {
    this._event = event;
  }

  get role(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get account(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get sender(): Address {
    return this._event.parameters[2].value.toAddress();
  }
}

export class RoleRevoked extends ethereum.Event {
  get params(): RoleRevoked__Params {
    return new RoleRevoked__Params(this);
  }
}

export class RoleRevoked__Params {
  _event: RoleRevoked;

  constructor(event: RoleRevoked) {
    this._event = event;
  }

  get role(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get account(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get sender(): Address {
    return this._event.parameters[2].value.toAddress();
  }
}

export class TimeStampCancelled extends ethereum.Event {
  get params(): TimeStampCancelled__Params {
    return new TimeStampCancelled__Params(this);
  }
}

export class TimeStampCancelled__Params {
  _event: TimeStampCancelled;

  constructor(event: TimeStampCancelled) {
    this._event = event;
  }

  get lender(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get timestamp(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class Unpaused extends ethereum.Event {
  get params(): Unpaused__Params {
    return new Unpaused__Params(this);
  }
}

export class Unpaused__Params {
  _event: Unpaused;

  constructor(event: Unpaused) {
    this._event = event;
  }

  get account(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class UpdateStatus extends ethereum.Event {
  get params(): UpdateStatus__Params {
    return new UpdateStatus__Params(this);
  }
}

export class UpdateStatus__Params {
  _event: UpdateStatus;

  constructor(event: UpdateStatus) {
    this._event = event;
  }

  get loanId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get xy3NftId(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get newStatus(): i32 {
    return this._event.parameters[2].value.toI32();
  }
}

export class XY3__getLoanStateResultValue0Struct extends ethereum.Tuple {
  get xy3NftId(): BigInt {
    return this[0].toBigInt();
  }

  get status(): i32 {
    return this[1].toI32();
  }
}

export class XY3__loanDetailsResult {
  value0: BigInt;
  value1: BigInt;
  value2: BigInt;
  value3: Address;
  value4: BigInt;
  value5: i32;
  value6: BigInt;
  value7: Address;
  value8: Address;
  value9: boolean;

  constructor(
    value0: BigInt,
    value1: BigInt,
    value2: BigInt,
    value3: Address,
    value4: BigInt,
    value5: i32,
    value6: BigInt,
    value7: Address,
    value8: Address,
    value9: boolean
  ) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
    this.value3 = value3;
    this.value4 = value4;
    this.value5 = value5;
    this.value6 = value6;
    this.value7 = value7;
    this.value8 = value8;
    this.value9 = value9;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromUnsignedBigInt(this.value0));
    map.set("value1", ethereum.Value.fromUnsignedBigInt(this.value1));
    map.set("value2", ethereum.Value.fromUnsignedBigInt(this.value2));
    map.set("value3", ethereum.Value.fromAddress(this.value3));
    map.set("value4", ethereum.Value.fromUnsignedBigInt(this.value4));
    map.set(
      "value5",
      ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(this.value5))
    );
    map.set("value6", ethereum.Value.fromUnsignedBigInt(this.value6));
    map.set("value7", ethereum.Value.fromAddress(this.value7));
    map.set("value8", ethereum.Value.fromAddress(this.value8));
    map.set("value9", ethereum.Value.fromBoolean(this.value9));
    return map;
  }

  getBorrowAmount(): BigInt {
    return this.value0;
  }

  getRepayAmount(): BigInt {
    return this.value1;
  }

  getNftTokenId(): BigInt {
    return this.value2;
  }

  getBorrowAsset(): Address {
    return this.value3;
  }

  getLoanDuration(): BigInt {
    return this.value4;
  }

  getAdminShare(): i32 {
    return this.value5;
  }

  getLoanStart(): BigInt {
    return this.value6;
  }

  getNftAsset(): Address {
    return this.value7;
  }

  getBorrower(): Address {
    return this.value8;
  }

  getIsCollection(): boolean {
    return this.value9;
  }
}

export class XY3 extends ethereum.SmartContract {
  static bind(address: Address): XY3 {
    return new XY3("XY3", address);
  }

  DEFAULT_ADMIN_ROLE(): Bytes {
    let result = super.call(
      "DEFAULT_ADMIN_ROLE",
      "DEFAULT_ADMIN_ROLE():(bytes32)",
      []
    );

    return result[0].toBytes();
  }

  try_DEFAULT_ADMIN_ROLE(): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "DEFAULT_ADMIN_ROLE",
      "DEFAULT_ADMIN_ROLE():(bytes32)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  HUNDRED_PERCENT(): i32 {
    let result = super.call(
      "HUNDRED_PERCENT",
      "HUNDRED_PERCENT():(uint16)",
      []
    );

    return result[0].toI32();
  }

  try_HUNDRED_PERCENT(): ethereum.CallResult<i32> {
    let result = super.tryCall(
      "HUNDRED_PERCENT",
      "HUNDRED_PERCENT():(uint16)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toI32());
  }

  MANAGER_ROLE(): Bytes {
    let result = super.call("MANAGER_ROLE", "MANAGER_ROLE():(bytes32)", []);

    return result[0].toBytes();
  }

  try_MANAGER_ROLE(): ethereum.CallResult<Bytes> {
    let result = super.tryCall("MANAGER_ROLE", "MANAGER_ROLE():(bytes32)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  SIGNER_ROLE(): Bytes {
    let result = super.call("SIGNER_ROLE", "SIGNER_ROLE():(bytes32)", []);

    return result[0].toBytes();
  }

  try_SIGNER_ROLE(): ethereum.CallResult<Bytes> {
    let result = super.tryCall("SIGNER_ROLE", "SIGNER_ROLE():(bytes32)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  adminFeeReceiver(): Address {
    let result = super.call(
      "adminFeeReceiver",
      "adminFeeReceiver():(address)",
      []
    );

    return result[0].toAddress();
  }

  try_adminFeeReceiver(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "adminFeeReceiver",
      "adminFeeReceiver():(address)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  adminShare(): i32 {
    let result = super.call("adminShare", "adminShare():(uint16)", []);

    return result[0].toI32();
  }

  try_adminShare(): ethereum.CallResult<i32> {
    let result = super.tryCall("adminShare", "adminShare():(uint16)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toI32());
  }

  delegate(): Address {
    let result = super.call("delegate", "delegate():(address)", []);

    return result[0].toAddress();
  }

  try_delegate(): ethereum.CallResult<Address> {
    let result = super.tryCall("delegate", "delegate():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  getERC20Permit(_erc20: Address): boolean {
    let result = super.call(
      "getERC20Permit",
      "getERC20Permit(address):(bool)",
      [ethereum.Value.fromAddress(_erc20)]
    );

    return result[0].toBoolean();
  }

  try_getERC20Permit(_erc20: Address): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "getERC20Permit",
      "getERC20Permit(address):(bool)",
      [ethereum.Value.fromAddress(_erc20)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  getERC721Permit(_erc721: Address): boolean {
    let result = super.call(
      "getERC721Permit",
      "getERC721Permit(address):(bool)",
      [ethereum.Value.fromAddress(_erc721)]
    );

    return result[0].toBoolean();
  }

  try_getERC721Permit(_erc721: Address): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "getERC721Permit",
      "getERC721Permit(address):(bool)",
      [ethereum.Value.fromAddress(_erc721)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  getLoanState(_loanId: BigInt): XY3__getLoanStateResultValue0Struct {
    let result = super.call(
      "getLoanState",
      "getLoanState(uint32):((uint64,uint8))",
      [ethereum.Value.fromUnsignedBigInt(_loanId)]
    );

    return changetype<XY3__getLoanStateResultValue0Struct>(result[0].toTuple());
  }

  try_getLoanState(
    _loanId: BigInt
  ): ethereum.CallResult<XY3__getLoanStateResultValue0Struct> {
    let result = super.tryCall(
      "getLoanState",
      "getLoanState(uint32):((uint64,uint8))",
      [ethereum.Value.fromUnsignedBigInt(_loanId)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      changetype<XY3__getLoanStateResultValue0Struct>(value[0].toTuple())
    );
  }

  getNonceUsed(_user: Address, _nonce: BigInt): boolean {
    let result = super.call(
      "getNonceUsed",
      "getNonceUsed(address,uint256):(bool)",
      [
        ethereum.Value.fromAddress(_user),
        ethereum.Value.fromUnsignedBigInt(_nonce)
      ]
    );

    return result[0].toBoolean();
  }

  try_getNonceUsed(
    _user: Address,
    _nonce: BigInt
  ): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "getNonceUsed",
      "getNonceUsed(address,uint256):(bool)",
      [
        ethereum.Value.fromAddress(_user),
        ethereum.Value.fromUnsignedBigInt(_nonce)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  getRepayAmount(_loanId: BigInt): BigInt {
    let result = super.call(
      "getRepayAmount",
      "getRepayAmount(uint32):(uint256)",
      [ethereum.Value.fromUnsignedBigInt(_loanId)]
    );

    return result[0].toBigInt();
  }

  try_getRepayAmount(_loanId: BigInt): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "getRepayAmount",
      "getRepayAmount(uint32):(uint256)",
      [ethereum.Value.fromUnsignedBigInt(_loanId)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getRoleAdmin(role: Bytes): Bytes {
    let result = super.call("getRoleAdmin", "getRoleAdmin(bytes32):(bytes32)", [
      ethereum.Value.fromFixedBytes(role)
    ]);

    return result[0].toBytes();
  }

  try_getRoleAdmin(role: Bytes): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "getRoleAdmin",
      "getRoleAdmin(bytes32):(bytes32)",
      [ethereum.Value.fromFixedBytes(role)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  getTimestampCancelled(_user: Address): BigInt {
    let result = super.call(
      "getTimestampCancelled",
      "getTimestampCancelled(address):(uint256)",
      [ethereum.Value.fromAddress(_user)]
    );

    return result[0].toBigInt();
  }

  try_getTimestampCancelled(_user: Address): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "getTimestampCancelled",
      "getTimestampCancelled(address):(uint256)",
      [ethereum.Value.fromAddress(_user)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  hasRole(role: Bytes, account: Address): boolean {
    let result = super.call("hasRole", "hasRole(bytes32,address):(bool)", [
      ethereum.Value.fromFixedBytes(role),
      ethereum.Value.fromAddress(account)
    ]);

    return result[0].toBoolean();
  }

  try_hasRole(role: Bytes, account: Address): ethereum.CallResult<boolean> {
    let result = super.tryCall("hasRole", "hasRole(bytes32,address):(bool)", [
      ethereum.Value.fromFixedBytes(role),
      ethereum.Value.fromAddress(account)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  loanDetails(param0: BigInt): XY3__loanDetailsResult {
    let result = super.call(
      "loanDetails",
      "loanDetails(uint32):(uint256,uint256,uint256,address,uint32,uint16,uint64,address,address,bool)",
      [ethereum.Value.fromUnsignedBigInt(param0)]
    );

    return new XY3__loanDetailsResult(
      result[0].toBigInt(),
      result[1].toBigInt(),
      result[2].toBigInt(),
      result[3].toAddress(),
      result[4].toBigInt(),
      result[5].toI32(),
      result[6].toBigInt(),
      result[7].toAddress(),
      result[8].toAddress(),
      result[9].toBoolean()
    );
  }

  try_loanDetails(param0: BigInt): ethereum.CallResult<XY3__loanDetailsResult> {
    let result = super.tryCall(
      "loanDetails",
      "loanDetails(uint32):(uint256,uint256,uint256,address,uint32,uint16,uint64,address,address,bool)",
      [ethereum.Value.fromUnsignedBigInt(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new XY3__loanDetailsResult(
        value[0].toBigInt(),
        value[1].toBigInt(),
        value[2].toBigInt(),
        value[3].toAddress(),
        value[4].toBigInt(),
        value[5].toI32(),
        value[6].toBigInt(),
        value[7].toAddress(),
        value[8].toAddress(),
        value[9].toBoolean()
      )
    );
  }

  maxBorrowDuration(): BigInt {
    let result = super.call(
      "maxBorrowDuration",
      "maxBorrowDuration():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_maxBorrowDuration(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "maxBorrowDuration",
      "maxBorrowDuration():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  minBorrowDuration(): BigInt {
    let result = super.call(
      "minBorrowDuration",
      "minBorrowDuration():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_minBorrowDuration(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "minBorrowDuration",
      "minBorrowDuration():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  onERC721Received(
    param0: Address,
    param1: Address,
    param2: BigInt,
    param3: Bytes
  ): Bytes {
    let result = super.call(
      "onERC721Received",
      "onERC721Received(address,address,uint256,bytes):(bytes4)",
      [
        ethereum.Value.fromAddress(param0),
        ethereum.Value.fromAddress(param1),
        ethereum.Value.fromUnsignedBigInt(param2),
        ethereum.Value.fromBytes(param3)
      ]
    );

    return result[0].toBytes();
  }

  try_onERC721Received(
    param0: Address,
    param1: Address,
    param2: BigInt,
    param3: Bytes
  ): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "onERC721Received",
      "onERC721Received(address,address,uint256,bytes):(bytes4)",
      [
        ethereum.Value.fromAddress(param0),
        ethereum.Value.fromAddress(param1),
        ethereum.Value.fromUnsignedBigInt(param2),
        ethereum.Value.fromBytes(param3)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  paused(): boolean {
    let result = super.call("paused", "paused():(bool)", []);

    return result[0].toBoolean();
  }

  try_paused(): ethereum.CallResult<boolean> {
    let result = super.tryCall("paused", "paused():(bool)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  supportsInterface(_interfaceId: Bytes): boolean {
    let result = super.call(
      "supportsInterface",
      "supportsInterface(bytes4):(bool)",
      [ethereum.Value.fromFixedBytes(_interfaceId)]
    );

    return result[0].toBoolean();
  }

  try_supportsInterface(_interfaceId: Bytes): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "supportsInterface",
      "supportsInterface(bytes4):(bool)",
      [ethereum.Value.fromFixedBytes(_interfaceId)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  ticketToken(): Address {
    let result = super.call("ticketToken", "ticketToken():(address)", []);

    return result[0].toAddress();
  }

  try_ticketToken(): ethereum.CallResult<Address> {
    let result = super.tryCall("ticketToken", "ticketToken():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  totalNumLoans(): BigInt {
    let result = super.call("totalNumLoans", "totalNumLoans():(uint32)", []);

    return result[0].toBigInt();
  }

  try_totalNumLoans(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("totalNumLoans", "totalNumLoans():(uint32)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }
}

export class ConstructorCall extends ethereum.Call {
  get inputs(): ConstructorCall__Inputs {
    return new ConstructorCall__Inputs(this);
  }

  get outputs(): ConstructorCall__Outputs {
    return new ConstructorCall__Outputs(this);
  }
}

export class ConstructorCall__Inputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }

  get _admin(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _ticketToken(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get _delegate(): Address {
    return this._call.inputValues[2].value.toAddress();
  }
}

export class ConstructorCall__Outputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class BorrowCall extends ethereum.Call {
  get inputs(): BorrowCall__Inputs {
    return new BorrowCall__Inputs(this);
  }

  get outputs(): BorrowCall__Outputs {
    return new BorrowCall__Outputs(this);
  }
}

export class BorrowCall__Inputs {
  _call: BorrowCall;

  constructor(call: BorrowCall) {
    this._call = call;
  }

  get _offer(): BorrowCall_offerStruct {
    return changetype<BorrowCall_offerStruct>(
      this._call.inputValues[0].value.toTuple()
    );
  }

  get _nftId(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get _isCollectionOffer(): boolean {
    return this._call.inputValues[2].value.toBoolean();
  }

  get _lenderSignature(): BorrowCall_lenderSignatureStruct {
    return changetype<BorrowCall_lenderSignatureStruct>(
      this._call.inputValues[3].value.toTuple()
    );
  }

  get _brokerSignature(): BorrowCall_brokerSignatureStruct {
    return changetype<BorrowCall_brokerSignatureStruct>(
      this._call.inputValues[4].value.toTuple()
    );
  }
}

export class BorrowCall__Outputs {
  _call: BorrowCall;

  constructor(call: BorrowCall) {
    this._call = call;
  }
}

export class BorrowCall_offerStruct extends ethereum.Tuple {
  get borrowAmount(): BigInt {
    return this[0].toBigInt();
  }

  get repayAmount(): BigInt {
    return this[1].toBigInt();
  }

  get nftAsset(): Address {
    return this[2].toAddress();
  }

  get borrowDuration(): BigInt {
    return this[3].toBigInt();
  }

  get adminShare(): i32 {
    return this[4].toI32();
  }

  get borrowAsset(): Address {
    return this[5].toAddress();
  }

  get timestamp(): BigInt {
    return this[6].toBigInt();
  }
}

export class BorrowCall_lenderSignatureStruct extends ethereum.Tuple {
  get nonce(): BigInt {
    return this[0].toBigInt();
  }

  get expiry(): BigInt {
    return this[1].toBigInt();
  }

  get signer(): Address {
    return this[2].toAddress();
  }

  get signature(): Bytes {
    return this[3].toBytes();
  }
}

export class BorrowCall_brokerSignatureStruct extends ethereum.Tuple {
  get nonce(): BigInt {
    return this[0].toBigInt();
  }

  get expiry(): BigInt {
    return this[1].toBigInt();
  }

  get signer(): Address {
    return this[2].toAddress();
  }

  get signature(): Bytes {
    return this[3].toBytes();
  }
}

export class CancelByNonceCall extends ethereum.Call {
  get inputs(): CancelByNonceCall__Inputs {
    return new CancelByNonceCall__Inputs(this);
  }

  get outputs(): CancelByNonceCall__Outputs {
    return new CancelByNonceCall__Outputs(this);
  }
}

export class CancelByNonceCall__Inputs {
  _call: CancelByNonceCall;

  constructor(call: CancelByNonceCall) {
    this._call = call;
  }

  get _nonce(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class CancelByNonceCall__Outputs {
  _call: CancelByNonceCall;

  constructor(call: CancelByNonceCall) {
    this._call = call;
  }
}

export class CancelByTimestampCall extends ethereum.Call {
  get inputs(): CancelByTimestampCall__Inputs {
    return new CancelByTimestampCall__Inputs(this);
  }

  get outputs(): CancelByTimestampCall__Outputs {
    return new CancelByTimestampCall__Outputs(this);
  }
}

export class CancelByTimestampCall__Inputs {
  _call: CancelByTimestampCall;

  constructor(call: CancelByTimestampCall) {
    this._call = call;
  }

  get _timestamp(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class CancelByTimestampCall__Outputs {
  _call: CancelByTimestampCall;

  constructor(call: CancelByTimestampCall) {
    this._call = call;
  }
}

export class GrantRoleCall extends ethereum.Call {
  get inputs(): GrantRoleCall__Inputs {
    return new GrantRoleCall__Inputs(this);
  }

  get outputs(): GrantRoleCall__Outputs {
    return new GrantRoleCall__Outputs(this);
  }
}

export class GrantRoleCall__Inputs {
  _call: GrantRoleCall;

  constructor(call: GrantRoleCall) {
    this._call = call;
  }

  get role(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get account(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class GrantRoleCall__Outputs {
  _call: GrantRoleCall;

  constructor(call: GrantRoleCall) {
    this._call = call;
  }
}

export class LiquidateCall extends ethereum.Call {
  get inputs(): LiquidateCall__Inputs {
    return new LiquidateCall__Inputs(this);
  }

  get outputs(): LiquidateCall__Outputs {
    return new LiquidateCall__Outputs(this);
  }
}

export class LiquidateCall__Inputs {
  _call: LiquidateCall;

  constructor(call: LiquidateCall) {
    this._call = call;
  }

  get _loanId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class LiquidateCall__Outputs {
  _call: LiquidateCall;

  constructor(call: LiquidateCall) {
    this._call = call;
  }
}

export class OnERC721ReceivedCall extends ethereum.Call {
  get inputs(): OnERC721ReceivedCall__Inputs {
    return new OnERC721ReceivedCall__Inputs(this);
  }

  get outputs(): OnERC721ReceivedCall__Outputs {
    return new OnERC721ReceivedCall__Outputs(this);
  }
}

export class OnERC721ReceivedCall__Inputs {
  _call: OnERC721ReceivedCall;

  constructor(call: OnERC721ReceivedCall) {
    this._call = call;
  }

  get value0(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get value1(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get value2(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }

  get value3(): Bytes {
    return this._call.inputValues[3].value.toBytes();
  }
}

export class OnERC721ReceivedCall__Outputs {
  _call: OnERC721ReceivedCall;

  constructor(call: OnERC721ReceivedCall) {
    this._call = call;
  }

  get value0(): Bytes {
    return this._call.outputValues[0].value.toBytes();
  }
}

export class PauseCall extends ethereum.Call {
  get inputs(): PauseCall__Inputs {
    return new PauseCall__Inputs(this);
  }

  get outputs(): PauseCall__Outputs {
    return new PauseCall__Outputs(this);
  }
}

export class PauseCall__Inputs {
  _call: PauseCall;

  constructor(call: PauseCall) {
    this._call = call;
  }
}

export class PauseCall__Outputs {
  _call: PauseCall;

  constructor(call: PauseCall) {
    this._call = call;
  }
}

export class RenounceRoleCall extends ethereum.Call {
  get inputs(): RenounceRoleCall__Inputs {
    return new RenounceRoleCall__Inputs(this);
  }

  get outputs(): RenounceRoleCall__Outputs {
    return new RenounceRoleCall__Outputs(this);
  }
}

export class RenounceRoleCall__Inputs {
  _call: RenounceRoleCall;

  constructor(call: RenounceRoleCall) {
    this._call = call;
  }

  get role(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get account(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class RenounceRoleCall__Outputs {
  _call: RenounceRoleCall;

  constructor(call: RenounceRoleCall) {
    this._call = call;
  }
}

export class RepayCall extends ethereum.Call {
  get inputs(): RepayCall__Inputs {
    return new RepayCall__Inputs(this);
  }

  get outputs(): RepayCall__Outputs {
    return new RepayCall__Outputs(this);
  }
}

export class RepayCall__Inputs {
  _call: RepayCall;

  constructor(call: RepayCall) {
    this._call = call;
  }

  get _loanId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class RepayCall__Outputs {
  _call: RepayCall;

  constructor(call: RepayCall) {
    this._call = call;
  }
}

export class RevokeRoleCall extends ethereum.Call {
  get inputs(): RevokeRoleCall__Inputs {
    return new RevokeRoleCall__Inputs(this);
  }

  get outputs(): RevokeRoleCall__Outputs {
    return new RevokeRoleCall__Outputs(this);
  }
}

export class RevokeRoleCall__Inputs {
  _call: RevokeRoleCall;

  constructor(call: RevokeRoleCall) {
    this._call = call;
  }

  get role(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get account(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class RevokeRoleCall__Outputs {
  _call: RevokeRoleCall;

  constructor(call: RevokeRoleCall) {
    this._call = call;
  }
}

export class SetERC20PermitsCall extends ethereum.Call {
  get inputs(): SetERC20PermitsCall__Inputs {
    return new SetERC20PermitsCall__Inputs(this);
  }

  get outputs(): SetERC20PermitsCall__Outputs {
    return new SetERC20PermitsCall__Outputs(this);
  }
}

export class SetERC20PermitsCall__Inputs {
  _call: SetERC20PermitsCall;

  constructor(call: SetERC20PermitsCall) {
    this._call = call;
  }

  get _erc20s(): Array<Address> {
    return this._call.inputValues[0].value.toAddressArray();
  }

  get _permits(): Array<boolean> {
    return this._call.inputValues[1].value.toBooleanArray();
  }
}

export class SetERC20PermitsCall__Outputs {
  _call: SetERC20PermitsCall;

  constructor(call: SetERC20PermitsCall) {
    this._call = call;
  }
}

export class SetERC721PermitsCall extends ethereum.Call {
  get inputs(): SetERC721PermitsCall__Inputs {
    return new SetERC721PermitsCall__Inputs(this);
  }

  get outputs(): SetERC721PermitsCall__Outputs {
    return new SetERC721PermitsCall__Outputs(this);
  }
}

export class SetERC721PermitsCall__Inputs {
  _call: SetERC721PermitsCall;

  constructor(call: SetERC721PermitsCall) {
    this._call = call;
  }

  get _erc721s(): Array<Address> {
    return this._call.inputValues[0].value.toAddressArray();
  }

  get _permits(): Array<boolean> {
    return this._call.inputValues[1].value.toBooleanArray();
  }
}

export class SetERC721PermitsCall__Outputs {
  _call: SetERC721PermitsCall;

  constructor(call: SetERC721PermitsCall) {
    this._call = call;
  }
}

export class UnpauseCall extends ethereum.Call {
  get inputs(): UnpauseCall__Inputs {
    return new UnpauseCall__Inputs(this);
  }

  get outputs(): UnpauseCall__Outputs {
    return new UnpauseCall__Outputs(this);
  }
}

export class UnpauseCall__Inputs {
  _call: UnpauseCall;

  constructor(call: UnpauseCall) {
    this._call = call;
  }
}

export class UnpauseCall__Outputs {
  _call: UnpauseCall;

  constructor(call: UnpauseCall) {
    this._call = call;
  }
}

export class UpdateAdminFeeReceiverCall extends ethereum.Call {
  get inputs(): UpdateAdminFeeReceiverCall__Inputs {
    return new UpdateAdminFeeReceiverCall__Inputs(this);
  }

  get outputs(): UpdateAdminFeeReceiverCall__Outputs {
    return new UpdateAdminFeeReceiverCall__Outputs(this);
  }
}

export class UpdateAdminFeeReceiverCall__Inputs {
  _call: UpdateAdminFeeReceiverCall;

  constructor(call: UpdateAdminFeeReceiverCall) {
    this._call = call;
  }

  get _newAdminFeeReceiver(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class UpdateAdminFeeReceiverCall__Outputs {
  _call: UpdateAdminFeeReceiverCall;

  constructor(call: UpdateAdminFeeReceiverCall) {
    this._call = call;
  }
}

export class UpdateAdminShareCall extends ethereum.Call {
  get inputs(): UpdateAdminShareCall__Inputs {
    return new UpdateAdminShareCall__Inputs(this);
  }

  get outputs(): UpdateAdminShareCall__Outputs {
    return new UpdateAdminShareCall__Outputs(this);
  }
}

export class UpdateAdminShareCall__Inputs {
  _call: UpdateAdminShareCall;

  constructor(call: UpdateAdminShareCall) {
    this._call = call;
  }

  get _newAdminShare(): i32 {
    return this._call.inputValues[0].value.toI32();
  }
}

export class UpdateAdminShareCall__Outputs {
  _call: UpdateAdminShareCall;

  constructor(call: UpdateAdminShareCall) {
    this._call = call;
  }
}

export class UpdateMaxBorrowDurationCall extends ethereum.Call {
  get inputs(): UpdateMaxBorrowDurationCall__Inputs {
    return new UpdateMaxBorrowDurationCall__Inputs(this);
  }

  get outputs(): UpdateMaxBorrowDurationCall__Outputs {
    return new UpdateMaxBorrowDurationCall__Outputs(this);
  }
}

export class UpdateMaxBorrowDurationCall__Inputs {
  _call: UpdateMaxBorrowDurationCall;

  constructor(call: UpdateMaxBorrowDurationCall) {
    this._call = call;
  }

  get _newMaxBorrowDuration(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class UpdateMaxBorrowDurationCall__Outputs {
  _call: UpdateMaxBorrowDurationCall;

  constructor(call: UpdateMaxBorrowDurationCall) {
    this._call = call;
  }
}

export class UpdateMinBorrowDurationCall extends ethereum.Call {
  get inputs(): UpdateMinBorrowDurationCall__Inputs {
    return new UpdateMinBorrowDurationCall__Inputs(this);
  }

  get outputs(): UpdateMinBorrowDurationCall__Outputs {
    return new UpdateMinBorrowDurationCall__Outputs(this);
  }
}

export class UpdateMinBorrowDurationCall__Inputs {
  _call: UpdateMinBorrowDurationCall;

  constructor(call: UpdateMinBorrowDurationCall) {
    this._call = call;
  }

  get _newMinBorrowDuration(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class UpdateMinBorrowDurationCall__Outputs {
  _call: UpdateMinBorrowDurationCall;

  constructor(call: UpdateMinBorrowDurationCall) {
    this._call = call;
  }
}
